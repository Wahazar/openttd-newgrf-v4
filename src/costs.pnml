/*
 *  Copyright (C) 2017 Transportman
 *  This file is part of the 2cc Trains In NML and is based on The Dutch Trainset 2.0 by Jasper Vries
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

//this file is used to define the costs of vehicles
#define	PURCHASECOSTPROPERTY cost_factor: PURCHASECOSTVALUE;
#define RUNNINGCOSTPROPERTY running_cost_factor: RUNNINGCOSTVALUE;

#define RUNNINGCOSTENGINESWITCH

#define RUNNINGCOSTMUWAGONSWITCH

#define RUNNINGCOSTENGINESWITCHCALL
#define RUNNINGCOSTMUWAGONUNPOWEREDSWITCHCALL running_cost_factor: int(1*(RUNNINGCOSTVALUE)/8+1);
#define RUNNINGCOSTMUWAGONPOWEREDSWITCHCALL running_cost_factor: int(2*(RUNNINGCOSTVALUE)/4+1);

//flattened speed
#define SPEED0 50

// Use Newton's method to approximate the sqare root
#define SQRTESTIMATE(VALUE,GUESS) (GUESS-((GUESS*GUESS)-VALUE )/(0.1+2*GUESS))

#define SQRT(VALUE) max(0,SQRTESTIMATE(VALUE,SQRTESTIMATE(VALUE,SQRTESTIMATE(VALUE,VALUE/40))))

// default values
#define PURCHASECOSTVALUE 0
#define RUNNINGCOSTVALUE 0


// Railbuses
#define PURCHASECOSTRAILBUSVALUE(SCALAR, WFACTOR, SFACTOR, PFACTOR, CAPFACTOR, STAFF) \
min(255, SCALAR*(WFACTOR*WEIGHT+SFACTOR*(SPEED0+SPEED)+PFACTOR*SQRT(10+POWER)+CAPFACTOR*SQRT(1+HEAD_CAPACITY)+STAFF)*(50-POPULARITY+VOLTAGE)/100)

#define RUNNINGCOSTRAILBUSVALUE(SCALAR, SFACTOR, PFACTOR, CAPFACTOR, STAFF) \
min(255, SCALAR*(SFACTOR*WEIGHT*SPEED*SPEED/100+PFACTOR*POWER*(100-VOLTAGE)/100+CAPFACTOR*HEAD_CAPACITY+STAFF))

// Steam railbus
#define PURCHASECOSTSTEAMRAILBUSVALUE PURCHASECOSTRAILBUSVALUE(1.4, 0.010, 0.1, 0.2, 0.4, 2)
#define RUNNINGCOSTSTEAMRAILBUSVALUE RUNNINGCOSTRAILBUSVALUE(1.2, 0.006, 0.03, 0.2, 3)

// Diesel railbus
#define PURCHASECOSTDIESELRAILBUSVALUE PURCHASECOSTRAILBUSVALUE(1.6, 0.013, 0.25, 0.12, 0.4, 1)
#define RUNNINGCOSTDIESELRAILBUSVALUE RUNNINGCOSTRAILBUSVALUE(1.2, 0.005, 0.02, 0.2, 2)

// Electric railbus
#define PURCHASECOSTELECTRICRAILBUSVALUE PURCHASECOSTRAILBUSVALUE(1.5, 0.011, 0.2, 0.1, 0.4, 1)
#define RUNNINGCOSTELECTRICRAILBUSVALUE RUNNINGCOSTRAILBUSVALUE(1.0, 0.004, 0.01, 0.2, 1)

// Metro railbus
//#define PURCHASECOSTMETRORAILBUSVALUE PURCHASECOSTRAILBUSVALUE(1, 0.1, 0.05, 1, 0.5, 1)
//#define RUNNINGCOSTMETRORAILBUSVALUE RUNNINGCOSTRAILBUSVALUE(1, 0.01, 1, 0.5, 1)

// Maglev railbus
//#define PURCHASECOSTMAGLEVRAILBUSVALUE PURCHASECOSTRAILBUSVALUE(1, 0.1, 0.05, 1, 0.5, 1)
//#define RUNNINGCOSTMAGLEVRAILBUSVALUE RUNNINGCOSTRAILBUSVALUE(1, 0.01, 1, 0.5, 1)


// Engines
#define PURCHASECOSTENGINEVALUE(SCALAR, WFACTOR, SFACTOR, PFACTOR, STAFF) \
min(255, SCALAR*(WFACTOR*WEIGHT+SFACTOR*(SPEED0+SPEED)+PFACTOR*(10+POWER)+STAFF)*(60-POPULARITY+VOLTAGE)/100)

#define RUNNINGCOSTENGINEVALUE(SCALAR, SFACTOR, PFACTOR, STAFF) \
min(255, SCALAR*(SFACTOR*WEIGHT*SPEED*SPEED/100+PFACTOR*POWER*(100-min(VOLTAGE,25))/100+STAFF))

// Steam engine
#define PURCHASECOSTSTEAMENGINEVALUE PURCHASECOSTENGINEVALUE(1.2, 0.02, 0.2, 0.018, 1)
#define RUNNINGCOSTSTEAMENGINEVALUE RUNNINGCOSTENGINEVALUE(1.1, 0.006, 0.025, 3)

// Diesel engine
#define PURCHASECOSTDIESELENGINEVALUE PURCHASECOSTENGINEVALUE(1.5, 0.02, 0.2, 0.02, 1)
#define RUNNINGCOSTDIESELENGINEVALUE RUNNINGCOSTENGINEVALUE(1.4, 0.005, 0.016, 2)

// Electric engine
#define PURCHASECOSTELECTRICENGINEVALUE PURCHASECOSTENGINEVALUE(1.3, 0.018, 0.2, 0.015, 1)
#define RUNNINGCOSTELECTRICENGINEVALUE RUNNINGCOSTENGINEVALUE(0.9, 0.004, 0.015, 1)

// MUs
#define PURCHASECOSTMUVALUE(SCALAR, WFACTOR, SFACTOR, PFACTOR, HCAPFACTOR, WCAPFACTOR, STAFF) \
min(255, SCALAR*(WFACTOR*WEIGHT+SFACTOR*(SPEED0+SPEED)+PFACTOR*SQRT(10+POWER)+max(HCAPFACTOR*SQRT(HEAD_CAPACITY), WCAPFACTOR*SQRT(WAGON_CAPACITY))+STAFF)*(70-POPULARITY+VOLTAGE)/100)

#define RUNNINGCOSTMUVALUE(SCALAR, SFACTOR, PFACTOR, HCAPFACTOR, WCAPFACTOR, STAFF) \
min(255, SCALAR*(SFACTOR*WEIGHT*SPEED*SPEED/100+PFACTOR*POWER*(100-VOLTAGE)/100+max(HCAPFACTOR*HEAD_CAPACITY, WCAPFACTOR*WAGON_CAPACITY)+STAFF))

// DMU
#define PURCHASECOSTDMUVALUE PURCHASECOSTMUVALUE(1.3, 0.015, 0.5, 0.3, 0.5, 0.5, 2)
#define RUNNINGCOSTDMUVALUE RUNNINGCOSTMUVALUE(1.2, 0.005, 0.02, 0.2, 0.2, 2)

// EMU
#define PURCHASECOSTEMUVALUE PURCHASECOSTMUVALUE(1.1, 0.015, 0.5, 0.2, 0.5, 0.5, 1)
#define RUNNINGCOSTEMUVALUE RUNNINGCOSTMUVALUE(1, 0.004, 0.01, 0.2, 0.2, 1)

// Maglev
//#define PURCHASECOSTMAGLEVVALUE PURCHASECOSTMUVALUE(1, 0.1, 0.05, 1, 0.5, 0.5, 1)
//#define RUNNINGCOSTMAGLEVVALUE RUNNINGCOSTMUVALUE(1, 0.01, 1, 0.5, 0.5, 1)

// Metro
#define PURCHASECOSTMETROVALUE PURCHASECOSTMUVALUE(2, 0.1, 0.05, 1, 0.5, 0.5, 1)
#define RUNNINGCOSTMETROVALUE RUNNINGCOSTMUVALUE(1, 0.003, 0.01, 0.2, 0.2, 1)

// Wagons and coaches
#define PURCHASECOSTNONENGINEVALUE(SCALAR, WFACTOR, SFACTOR, CAPFACTOR) \
min(255, SCALAR*(WFACTOR*WEIGHT+SFACTOR*SQRT(10+SPEED)+CAPFACTOR*HEAD_CAPACITY)*(50-POPULARITY)/100)

#define RUNNINGCOSTNONENGINEVALUE(SCALAR, SFACTOR, CAPFACTOR, STAFF) \
min(255, SCALAR*(SFACTOR*WEIGHT*SPEED*SPEED/100+CAPFACTOR*HEAD_CAPACITY*(100-POPULARITY)/100+STAFF))

#define RUNNINGCOSTFREIGHTWAGONVALUE(SCALAR, SFACTOR, CAPFACTOR, STAFF) \
min(255, SCALAR*((SFACTOR*(WEIGHT+CAPFACTOR*HEAD_CAPACITY))*SPEED*SPEED*(100-POPULARITY)/10000000+STAFF))

#define VARIABLERUNNINGCOSTFREIGHTWAGONVALUE(SCALAR, SFACTOR, CAPFACTOR, STAFF) \
min(255, SCALAR*((SFACTOR*(WEIGHT+(CAPFACTOR*cargo_count*cargo_unit_weight)/16))*SPEED*SPEED*(100-POPULARITY)/10000000+STAFF))

// Coach
#define PURCHASECOSTCOACHVALUE PURCHASECOSTNONENGINEVALUE(0.7, 0.6, 1.1, 0.3)
#define RUNNINGCOSTCOACHVALUE RUNNINGCOSTNONENGINEVALUE(1, 0.003, 0.06, 2)
#define RUNNINGCOSTMAILVANVALUE RUNNINGCOSTNONENGINEVALUE(1.1, 0.003, 0.09, 6)

// Wagon
#define PURCHASECOSTWAGONVALUE PURCHASECOSTNONENGINEVALUE(0.5, 0.5, 0.8, 0.4)
#define RUNNINGCOSTWAGONVALUE RUNNINGCOSTFREIGHTWAGONVALUE(1, 1, 2, 1)
#define VARIABLERUNNINGCOSTWAGONVALUE VARIABLERUNNINGCOSTFREIGHTWAGONVALUE(1, 1, 2, 1)

#define VARIABLERUNNINGCOSTVALUESWITCH(VEHIDCODE) \
/* if (param_variable_freigth_costs) { */ \
/* remove - desyncs?
 switch(FEAT_TRAINS, SELF, switch_##VEHIDCODE##_freight_variable_running_costs, vehicle_is_in_depot) { \
	0 : VARIABLERUNNINGCOSTWAGONVALUE; \
	1 : 1; \
	return CB_FAILED; \
 } 
*/

#define VARIABLERUNNINGCOSTPROPERTY(VEHIDCODE) \
/* if (param_variable_freigth_costs) { */ \
/* remove - desyncs?
 running_cost_factor: switch_##VEHIDCODE##_freight_variable_running_costs; \
 purchase_running_cost_factor: RUNNINGCOSTVALUE; 
*/

// MU wagonds
#define RUNNINGCOSTMU running_cost_factor: 0;
#define PURCHASECOSTMUPOWERED cost_factor: 200;
#define PURCHASECOSTMUUNPOWERED cost_factor: 100;
